name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: my-cloud-giulio-dev-v1-mytf   # TODO: update to cluster name
  GKE_REGION: us-central1	   # TODO: update to cluster region
  DEPLOYMENT_NAME: gke-golang-web # TODO: update deployment name if changed in deployment.yaml

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: Build
      run: go build web.go


    - name: Test
      run: ls -l web*
  
  # upload build artifact
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.0.0
      with:
        # Artifact name
        name: web
        # A file, directory or wildcard pattern that describes what to upload
        path: web 
    
  # define job to build and publish docker image
  build-and-push-docker-image:
    needs: build
    name: Build Docker image and push to hub repository
    # run only when code is compiling and tests are passing
    runs-on: ubuntu-latest

    # steps to perform in job
    steps:
      - name: Checkout code
        uses: actions/checkout@v2



      - name: Download build result for job 1
        uses: actions/download-artifact@v3
        with:
          name: web

      # setup Docker buld action
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      
      - name: Build image and push to Docker Hub 
        uses: docker/build-push-action@v2
        with:
          # relative path to the place where source code with Dockerfile is located
          context: .
          # Note: tags has to be all lower-case
          tags: |
            giuliohome/web.golang:latest 
          # build on feature branches, push only on main branch
          push: ${{ github.ref == 'refs/heads/main' }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  # Deploy docker image to the GKE cluster
  gke-deploy:
    needs: build-and-push-docker-image
    name: Setup and Deploy
    runs-on: ubuntu-latest

    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Configure Workload Identity Federation and generate an access token.
    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        workload_identity_provider: 'projects/93366402692/locations/global/workloadIdentityPools/my-identity-pool/providers/giulio'
        service_account: 'github-actions@my-cloud-giulio.iam.gserviceaccount.com'


    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v0

    # Get the GKE credentials so we can deploy to the cluster
    - run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION"
    # Deploy image to the GKE cluster
    - name: Deploy
      run: |-
        kubectl apply -f deployment.yml
        kubectl rollout status deployment/$DEPLOYMENT_NAME
        kubectl get services -o wide

# Cypress Tests using Cypress Docker Image
  cypress-run:
    needs: gke-deploy
    runs-on: ubuntu-latest
    container: cypress/browsers:node12.18.3-chrome87-ff82
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v2
        with:
          record: true
          # Specify Browser since container image is compiled with Chrome
          browser: chrome
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
